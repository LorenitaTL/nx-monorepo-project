name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [app1, app2] # Lista de apps que se pueden construir/desplegar. Puedes agregar m√°s.

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Task distribution via Nx Cloud
      - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
      - uses: nrwl/nx-set-shas@v4

      # Build only the current app from the matrix
      - name: Build App
        run: |
          npx nx run ${{matrix.app}}:build
        env:
          NX_CLOUD_DISTRIBUTED_EXECUTION: true

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: list files
        run: |
          cd ./${{ matrix.app }}
          ls -la

      # Upload the built app to the corresponding S3 bucket
      - name: Deploy app to S3
        run: |
          aws s3 sync ./${{ matrix.app }}/out s3://nx-${{ matrix.app }}-next --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-2'

      # Invalidate CloudFront cache for the current app
      # - name: Invalidate CloudFront cache
      #   run: |
      #     aws cloudfront create-invalidation --distribution-id YOUR_DISTRIBUTION_ID --paths "/*"
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
