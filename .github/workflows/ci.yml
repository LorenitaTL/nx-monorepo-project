name: Build and Deploy Apps to App Runner

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      apps:
        description: 'Apps to build and deploy (comma separated)'
        required: true
        default: 'nx-monorepo-project,create-record,update-record,records-list'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Convertimos la lista de aplicaciones separada por comas en una matriz
      - name: Convert comma separated apps to JSON array
        id: apps-array
        run: |
          apps=$(echo "${{ github.event.inputs.apps }}" | sed 's/,/","/g')
          echo "::set-output name=matrix_apps::[\"$apps\"]"

  matrix-job:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.build-and-deploy.outputs.matrix_apps) }}

    steps:
      - name: Build Docker image for app
        run: docker build --build-arg app_name=${{ matrix.app }} -t ${{ matrix.app }}-image .

      - name: Log in to Amazon ECR Public
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Tag Docker image
        run: |
          docker tag ${{ matrix.app }}-image:latest public.ecr.aws/u4p4s0e4/${{ matrix.app }}:latest

      - name: Push Docker image to ECR Public
        run: |
          docker push public.ecr.aws/u4p4s0e4/${{ matrix.app }}:latest

      # - name: Update App Runner Service with new image
      #   run: |
      #     aws apprunner update-service --service-arn $(aws apprunner list-services --query "ServiceSummaryList[?ServiceName=='my-app-runner-service'].ServiceArn" --output text) \
      #     --source-configuration ImageRepository:ImageIdentifier=public.ecr.aws/u4p4s0e4/${{ matrix.app }}:latest
